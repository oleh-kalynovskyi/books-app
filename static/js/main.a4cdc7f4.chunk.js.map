{"version":3,"sources":["components/addBook.js","components/Edit.js","components/dashbord.js","components/bookList.js","App.js","index.js"],"names":["AddBook","useEffect","books","localStorage","getItem","setBooks","JSON","parse","useState","book","setBook","change","setChange","id","Math","random","className","name","onSubmit","e","preventDefault","target","reset","bookss","setItem","stringify","setTimeout","htmlFor","required","autoComplete","type","onChange","title","value","author","category","isbn","to","Edit","Profile","useParams","parseInt","Number","parseFloat","filter","el","onClick","newBooks","map","item","Dashbord","BookList","empty","booksList","removeFromList","length","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4cdc7f4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function AddBook() {\r\n    \r\n    useEffect( () => {\r\n        const books = localStorage.getItem(\"books\") \r\n        setBooks(books ? JSON.parse(books) : []) \r\n    }, [])\r\n\r\n    const [book, setBook] = useState( '' );\r\n    const [change, setChange] = useState(false);\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        e.target.reset();\r\n\r\n        const bookss = [ ...books, book ];\r\n        setBooks(bookss);\r\n        localStorage.setItem(\"books\", JSON.stringify(bookss));\r\n\r\n        setChange(true)\r\n        setTimeout(() => { setChange(false) }, 1000);\r\n    }\r\n\r\n    const [books, setBooks] = useState( [ ] );\r\n\r\n    const id = Math.random()\r\n    return (\r\n        <div className=\"add-book-comp\">\r\n\r\n            { change ? <h1 className=\"modal\">Book added</h1> : null }\r\n\r\n            <h1>\r\n                Add book to List\r\n            </h1>\r\n\r\n            <form \r\n                className=\"add-book-form\"\r\n                name=\"book\"\r\n                onSubmit={ handleSubmit } >\r\n\r\n                <label htmlFor=\"title\">Book name</label>\r\n                <input \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    id=\"title\"\r\n                    type=\"text\" \r\n                    name=\"title\"\r\n                    onChange={(e) => setBook({...book, title: e.target.value, id })}  />  {/* id - here setting individual id number */}\r\n\r\n                <label htmlFor=\"author\">Author name</label>\r\n                <input \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    id=\"author\"\r\n                    type=\"text\" \r\n                    name=\"author\"\r\n                    onChange={(e) => setBook({...book, author: e.target.value})} />\r\n                    \r\n                <label htmlFor=\"category\">Category</label>\r\n                <select \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    id=\"category\"\r\n                    name=\"category\"\r\n                    onChange={(e) => setBook({...book, category: e.target.value})}>\r\n                    <option value=\"other\">other</option>\r\n                    <option value=\"Action and Adventure\">Action and Adventure</option>\r\n                    <option value=\"Classics\">Classics</option>\r\n                    <option value=\"Detective and Mystery\">Detective and Mystery</option>\r\n                    <option value=\"Historical Fiction\">Historical Fiction</option>\r\n                    <option value=\"Horror\">Horror</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"isbn\">ISBN</label>\r\n                <input \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    id=\"isbn\"\r\n                    type=\"number\" \r\n                    name=\"isbn\"\r\n                    onChange={(e) => setBook({...book, isbn: e.target.value })} />\r\n\r\n                <div className=\"btn-grup-action\">\r\n\r\n                    <button className=\"add-book-btn btn\">\r\n                        Add book\r\n                    </button>\r\n\r\n                    <Link to={\"/books-app\"} >\r\n                        <button className=\"add-book-btn btn\">\r\n                            back to Book list\r\n                        </button>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Edit() {\r\n\r\n    const [books, setBooks] = useState({ \r\n        author:  Profile()[0].author,\r\n        category:  Profile()[0].category, \r\n        id:  Profile()[0].id, \r\n        isbn:  Profile()[0].isbn, \r\n        title:  Profile()[0].title  \r\n    });\r\n\r\n    const [change, setChange] = useState(false);\r\n\r\n    function Profile() {\r\n        const id = useParams().id;\r\n        const books = JSON.parse(localStorage.getItem('books'));\r\n        const parseInt = Number.parseFloat( id );\r\n\r\n        const filtered = books.filter( el => el.id === parseInt )\r\n\r\n        return filtered\r\n    }\r\n\r\n    \r\n    const id = useParams().id;\r\n    function edit (e) {\r\n        e.preventDefault();\r\n        \r\n        const bookss = JSON.parse(localStorage.getItem('books'));\r\n        const parseInt = Number.parseFloat( id );\r\n\r\n        const newBooks = bookss.map( item => { \r\n            if( item.id === parseInt) {\r\n                item = books\r\n            }\r\n            return item\r\n        })\r\n\r\n        localStorage.setItem(\"books\", JSON.stringify(newBooks));\r\n\r\n        if( localStorage ) {\r\n            setChange(true)\r\n            setTimeout(() => { setChange(false) }, 1000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-book-form\">\r\n        \r\n            { change ? <h1 className=\"modal\">Saved</h1> : null }\r\n\r\n            <label htmlFor=\"author\">Book name</label>\r\n            <input \r\n                type=\"text\" \r\n                name=\"\" \r\n                id=\"\" \r\n                value={books.title}\r\n                onChange={(e) => setBooks({...books, title: e.target.value})} />\r\n\r\n            <label htmlFor=\"author\">Author name</label>\r\n            <input \r\n                type=\"text\" \r\n                name=\"\" \r\n                id=\"\" \r\n                value={books.author}\r\n                onChange={(e) => setBooks({...books, author: e.target.value})} />\r\n\r\n            <label htmlFor=\"author\">Category</label>\r\n            <select \r\n                required\r\n                id=\"category\"\r\n                name=\"category\"\r\n                value={books.category}\r\n                onChange={(e) => setBooks({...books, category: e.target.value})}>\r\n                <option value=\"other\">other</option>\r\n                <option value=\"Action and Adventure\">Action and Adventure</option>\r\n                <option value=\"Classics\">Classics</option>\r\n                <option value=\"Detective and Mystery\">Detective and Mystery</option>\r\n                <option value=\"Historical Fiction\">Historical Fiction</option>\r\n                <option value=\"Horror\">Horror</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"author\">ISBN</label>\r\n            <input \r\n                type=\"text\" \r\n                name=\"\" \r\n                id=\"\" \r\n                value={books.isbn}\r\n                onChange={(e) => setBooks({...books, isbn: e.target.value})} />\r\n\r\n            <div className=\"btn-grup-action\">\r\n                \r\n                <button className=\"add-book-btn btn\" onClick={edit}>\r\n                    Set\r\n                </button>\r\n\r\n                <Link to={\"/books-app\"} >\r\n                    <button className=\"add-book-btn btn\">\r\n                        Cancel\r\n                    </button>\r\n                </Link> \r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Dashbord() {\r\n    \r\n    return (\r\n        <div className=\"dashbord\">\r\n\r\n            <ul className=\"btn-grup-action\">\r\n\r\n                <Link to=\"/books-app\">\r\n                    <li className=\"add-book-btn\">\r\n                        All Books\r\n                    </li>\r\n                </Link>\r\n\r\n                <Link to=\"/add-book\">\r\n                    <li className=\"add-book-btn\">\r\n                        Add Book\r\n                    </li>\r\n                </Link>\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function BookList() {\r\n    \r\n    useEffect( () => {\r\n        const books = localStorage.getItem(\"books\") \r\n        setBooks(books ? JSON.parse(books) : []) \r\n    }, [])\r\n\r\n    const [books, setBooks] = useState( [ ] );\r\n    \r\n    const removeFromList = id => {\r\n        const newBooks = books.filter(el => el.id !== id) ;\r\n        setBooks(newBooks)\r\n        \r\n        localStorage.setItem(\"books\", JSON.stringify(newBooks));\r\n    }\r\n\r\n    const empty = <h1>Your book list is empty, add book press on \"Add Book\"</h1>\r\n    const booksList =  \r\n    books && books.map( (el) => {\r\n        return(\r\n            <div className=\"book-wrapper\"  key={el.id}>\r\n                <h3> {el.title} </h3>\r\n                <span> author: {el.author} </span>\r\n                <span>category: {el.category} </span>\r\n                <span>ISBN: {el.isbn} </span>\r\n\r\n                <div className=\"btn-grup-action\">\r\n                \r\n                    <Link to={\"/Edit/\" + el.id } >\r\n                        <button className=\"add-book-btn btn\">\r\n                            Edit\r\n                        </button>\r\n                    </Link>\r\n\r\n                    <button\r\n                        onClick={ () => removeFromList(el.id) }\r\n                        className=\"btn\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div className=\"book-card\">\r\n            { books.length > 0 ? booksList : empty }            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\n\nimport AddBook from './components/addBook'\nimport Edit from './components/Edit'\nimport Dashbord from './components/dashbord'\nimport BookList from './components/bookList'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n\n        <div className=\"header-title\">\n          <Link to={\"/books-app\"} >\n              <h1 className=\"main-title\">Book List</h1>\n          </Link>\n        </div>\n\n        <Dashbord/>\n\n        <Switch>\n          <Route exact path='/books-app' component={BookList}/>\n          <Route path='/add-book' component={AddBook}/>\n          <Route path='/Edit/:id' component={Edit}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}